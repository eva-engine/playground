(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{525:function(n,e,t){"use strict";t.r(e),e.default="import {\n  GameObject,\n  System,\n  Component,\n  decorators,\n  RESOURCE_TYPE,\n  resource,\n  Game,\n} from '@eva/eva.js';\nimport { Img, ImgSystem } from '@eva/plugin-renderer-img';\nimport { RendererSystem } from '@eva/plugin-renderer';\nimport {\n  SpriteAnimation,\n  SpriteAnimationSystem,\n} from '@eva/plugin-renderer-sprite-animation';\n\n// @decorators.componentObserver({\n//   Transform: ['position'],\n// })\nclass PhysicalSystem extends System {\n  static systemName = 'PhysicalSystem';\n  static observerInfo = {\n    Transform: ['position'],\n  };\n  gForce;\n  horizon;\n  left = 0;\n  right = 750;\n  solidPoints = [];\n  goal;\n\n  debounceFlag = false;\n\n  constructor(param) {\n    super(param);\n    this.initial(param);\n  }\n  /**\n   * System \u521d\u59cb\u5316\u7528\uff0c\u53ef\u4ee5\u914d\u7f6e\u53c2\u6570\uff0c\u6e38\u620f\u672a\u5f00\u59cb\n   *\n   * System init, set params, game is not begain\n   * @param param init params\n   */\n  initial(param) {\n    this.horizon = param.horizon;\n    this.gForce = param.gForce;\n    this.left = param.left;\n    this.right = param.right;\n    this.solidPoints = param.solidPoints ?? [];\n    this.goal = param.goal ?? undefined;\n    console.log(`Physical\u63d2\u4ef6\u521d\u59cb\u5316\u6210\u529f`);\n  }\n  /**\n   * System \u88ab\u5b89\u88c5\u7684\u65f6\u5019\uff0c\u5982\u679c\u6e38\u620f\u8fd8\u6ca1\u6709\u5f00\u59cb\uff0c\u90a3\u4e48\u4f1a\u5728\u6e38\u620f\u5f00\u59cb\u7684\u65f6\u5019\u8c03\u7528\u3002\u7528\u4e8e\u524d\u7f6e\u64cd\u4f5c\uff0c\u521d\u59cb\u5316\u6570\u636e\u7b49\u3002\n   *\n   * Called while the System installed, if game is not begain, it will be called while begain. use to pre operation, init data.\n   */\n  awake() {}\n  /**\n   * System \u88ab\u5b89\u88c5\u540e\uff0c\u6240\u6709\u7684 awake \u6267\u884c\u5b8c\u540e\n   *\n   * Called while the System installed, after all of systems' awake been called\n   */\n  start() {}\n  /**\n   * \u6bcf\u4e00\u6b21\u6e38\u620f\u5faa\u73af\u8c03\u7528\uff0c\u53ef\u4ee5\u505a\u4e00\u4e9b\u6e38\u620f\u64cd\u4f5c\uff0c\u63a7\u5236\u6539\u53d8\u4e00\u4e9b\u7ec4\u4ef6\u5c5e\u6027\u3002\n   *\n   * Called by every loop, can do some operation, change some property or other component property.\n   */\n  update() {\n    const changes = this.componentObserver.clear();\n    for (const changed of changes) {\n      if (changed.componentName === 'Transform') {\n        this.move(changed);\n      }\n    }\n  }\n  move(changed) {\n    const { components, transform } = changed.gameObject;\n    for (const component of components) {\n      if (component.name === 'Physical') {\n        const { speedInit, radius } = component;\n\n        if (\n          transform.position.x > this.right ||\n          transform.position.x < this.left\n        ) {\n          speedInit[0] = -speedInit[0];\n        }\n        if (transform.position.y > this.horizon) {\n          transform.position.y = this.horizon;\n          speedInit[1] = -speedInit[1];\n        }\n        if (this.debounceFlag === false) {\n          for (const pt of this.solidPoints) {\n            const delta =\n              Math.pow(pt.x - transform.position.x, 2) +\n              Math.pow(pt.y - transform.position.y, 2) -\n              Math.pow(radius, 2);\n            if (delta < 0) {\n              speedInit[0] = -speedInit[0];\n              speedInit[1] = -speedInit[1];\n              this.debounceFlag = true;\n              setTimeout(() => {\n                this.debounceFlag = false;\n              }, 500);\n              break;\n            }\n          }\n        }\n\n        if (this.goal?.point && this.debounceFlag === false) {\n          const delta =\n            Math.pow(this.goal?.point.x - transform.position.x, 2) +\n            Math.pow(this.goal?.point.y - transform.position.y, 2);\n          if (delta < 100) {\n            window.playAnim();\n            this.debounceFlag = true;\n            setTimeout(() => {\n              this.debounceFlag = false;\n            }, 500);\n          }\n        }\n\n        speedInit[1] += this.gForce;\n      }\n    }\n  }\n\n  /**\n   * \u548c update?() \u7c7b\u4f3c\uff0c\u5728\u6240\u6709System\u548c\u7ec4\u4ef6\u7684 update?() \u6267\u884c\u4ee5\u540e\u8c03\u7528\u3002\n   *\n   * Like update, called all of gameobject update.\n   */\n  lateUpdate() {}\n  /**\n   * \u6e38\u620f\u5f00\u59cb\u548c\u6e38\u620f\u6682\u505c\u540e\u5f00\u59cb\u64ad\u653e\u7684\u65f6\u5019\u8c03\u7528\u3002\n   *\n   * Called while the game to play when game pause.\n   */\n  onPlay() {}\n  /**\n   * \u6e38\u620f\u6682\u505c\u7684\u65f6\u5019\u8c03\u7528\u3002\n   *\n   * Called while the game paused.\n   */\n  onPause() {}\n  /**\n   * System \u88ab\u9500\u6bc1\u7684\u65f6\u5019\u8c03\u7528\u3002\n   * Called while the system be destroyed.\n   */\n  onDestroy() {}\n}\n\nclass Physical extends Component {\n  static componentName = 'Physical';\n\n  speedInit;\n\n  constructor(params) {\n    super();\n    this.speedInit = params.speedInit;\n    this.radius = params.radius;\n  }\n\n  update() {\n    const { gameObject } = this;\n    const { x, y } = gameObject.transform.position;\n\n    gameObject.transform.position = {\n      x: x + this.speedInit[0],\n      y: y + this.speedInit[1],\n    };\n  }\n}\n\nfunction createBackboard() {\n  const backboard = new GameObject('backboard', {\n    size: {\n      width: 100,\n      height: 238,\n    },\n  });\n\n  backboard.addComponent(\n    new Img({\n      resource: 'backboard',\n    }),\n  );\n  return backboard;\n}\n\nfunction createBasketBack() {\n  const basketBack = new GameObject('basketBack', {\n    size: {\n      width: 166,\n      height: 158,\n    },\n    position: {\n      x: 65,\n      y: 160,\n    },\n  });\n\n  basketBack.addComponent(\n    new Img({\n      resource: 'basketBack',\n    }),\n  );\n  return basketBack;\n}\nfunction createBasketFront() {\n  const basetFront = new GameObject('board', {\n    size: {\n      width: 166,\n      height: 157,\n    },\n    position: {\n      x: 80,\n      y: -760,\n    },\n    anchor: {\n      x: 0,\n      y: 1,\n    },\n  });\n\n  const anim = basetFront.addComponent(\n    new SpriteAnimation({\n      resource: 'boardIdle',\n      speed: 100,\n    }),\n  );\n\n  const playAnim = () => {\n    anim.resource = 'boardGoal';\n    setTimeout(() => {\n      anim.resource = 'boardIdle';\n    }, 900);\n  };\n\n  return { basetFront, playAnim };\n}\n\nfunction createBoard() {\n  const board = new GameObject('boardContainer', {\n    size: {\n      width: 750,\n      height: 1484,\n    },\n  });\n  const boardContainer = new GameObject('boardContainer', {\n    position: {\n      x: 0,\n      y: -920,\n    },\n    anchor: {\n      x: 0,\n      y: 1,\n    },\n  });\n\n  const backContainer = new GameObject('boardContainer', {\n    position: {\n      x: 0,\n      y: -920,\n    },\n    anchor: {\n      x: 0,\n      y: 1,\n    },\n  });\n\n  boardContainer.addChild(createBackboard());\n  backContainer.addChild(createBasketBack());\n\n  board.addChild(backContainer);\n  board.addChild(boardContainer);\n  return board;\n}\n\nfunction createBackground() {\n  const bg = new GameObject('bg', {\n    size: { width: 750, height: 1624 },\n    origin: { x: 0.5, y: 1 },\n    position: {\n      x: 0,\n      y: 120,\n    },\n    anchor: {\n      x: 0.5,\n      y: 1,\n    },\n  });\n\n  bg.addComponent(\n    new Img({\n      resource: 'bg',\n    }),\n  );\n  return bg;\n}\nfunction createBall(position) {\n  const ball = new GameObject('ball', {\n    size: { width: 79, height: 79 },\n    origin: { x: 0.5, y: 0.5 },\n    position,\n    anchor: {\n      x: 0,\n      y: 0,\n    },\n  });\n\n  ball.addComponent(\n    new Img({\n      resource: 'basketball',\n    }),\n  );\n  return ball;\n}\n\nconst resources = [\n  {\n    name: 'basketball',\n    type: RESOURCE_TYPE.IMAGE,\n    src: {\n      image: {\n        type: 'png',\n        url: 'https://gw.alicdn.com/tfs/TB1WF1R0Ez1gK0jSZLeXXb9kVXa-99-99.png',\n      },\n    },\n    preload: true,\n  },\n  {\n    name: 'backboard',\n    type: RESOURCE_TYPE.IMAGE,\n    src: {\n      image: {\n        type: 'png',\n        url:\n          'https://gw.alicdn.com/tfs/TB1a11YoRFR4u4jSZFPXXanzFXa-109-263.png',\n      },\n    },\n    preload: true,\n  },\n  {\n    name: 'bg',\n    type: RESOURCE_TYPE.IMAGE,\n    src: {\n      image: {\n        type: 'png',\n        url:\n          'https://gw.alicdn.com/tfs/TB15Upxqk9l0K4jSZFKXXXFjpXa-750-1624.jpg',\n      },\n    },\n    preload: true,\n  },\n  {\n    name: 'basketBack',\n    type: RESOURCE_TYPE.IMAGE,\n    src: {\n      image: {\n        type: 'png',\n        url:\n          'https://gw.alicdn.com/tfs/TB1Xerd0AY2gK0jSZFgXXc5OFXa-184-175.png',\n      },\n    },\n    preload: true,\n  },\n  {\n    name: 'boardIdle',\n    type: RESOURCE_TYPE.SPRITE_ANIMATION,\n    src: {\n      image: {\n        type: 'png',\n        url:\n          'https://gw.alicdn.com/tfs/TB1LYwonSR26e4jSZFEXXbwuXXa-920-875.png',\n      },\n      json: {\n        type: 'json',\n        url: './json/3246284841596d87b60749e88e0e26cd.json',\n      },\n    },\n    preload: true,\n  },\n  {\n    name: 'boardGoal',\n    type: RESOURCE_TYPE.SPRITE_ANIMATION,\n    src: {\n      image: {\n        type: 'png',\n        url:\n          'https://gw.alicdn.com/tfs/TB1ob_c0EY1gK0jSZFCXXcwqXXa-552-525.png',\n      },\n      json: {\n        type: 'json',\n        url: './json/dfefdd86474cded44bdc226549ae6d81.json',\n      },\n    },\n    preload: true,\n  },\n];\n\nresource.addResource(resources);\n\nconst game = new Game({\n  systems: [\n    new RendererSystem({\n      canvas: document.querySelector('#canvas'),\n      width: 750,\n      height: 1484,\n    }),\n    new ImgSystem(),\n    // new TransitionSystem(),\n    new SpriteAnimationSystem(),\n    // new RenderSystem(),\n    // new EventSystem(),\n    new PhysicalSystem({\n      left: 120,\n      right: 750,\n      horizon: 1200,\n      gForce: 1,\n      solidPoints: [\n        {\n          x: 120,\n          y: 758,\n        },\n        {\n          x: 220,\n          y: 758,\n        },\n      ],\n      goal: {\n        point: {\n          x: 170,\n          y: 758,\n        },\n      },\n    }),\n  ],\n});\n\ngame.scene.transform.size.width = 750;\ngame.scene.transform.size.height = 1484;\n\nconst pos = {\n  x: 500,\n  y: 1100,\n};\n\nconst ball = createBall(pos);\nconst throwBall = () => {\n  const phy = new Physical({\n    speedInit: [\n      Number(document.getElementById('speedx').value),\n      Number(document.getElementById('speedy').value),\n    ],\n    radius: 35,\n  });\n  ball.addComponent(phy);\n  window.resetBall = () => {\n    ball.removeComponent(phy);\n    ball.transform.position = pos;\n  };\n};\nconst { basetFront, playAnim } = createBasketFront();\n\ngame.scene.addChild(createBackground());\ngame.scene.addChild(createBoard());\ngame.scene.addChild(ball);\ngame.scene.addChild(basetFront);\n\nwindow.playAnim = playAnim;\nwindow.game = game;\nwindow.throwBall = throwBall;\n"}}]);