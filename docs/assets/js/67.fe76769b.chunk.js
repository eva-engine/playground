(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{521:function(n,t,i){"use strict";i.r(t),t.default='<!DOCTYPE html>\n<html lang="en">\n\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n    <style>\n        body {\n            margin: 0;\n            color: white\n        }\n    </style>\n</head>\n\n<body>\n    <div class="outter">\n        <div class="ranges">\n            Anchor X <input id="anchorX" data-prop="anchor" data-key="x" type="range" max="2" min="-1" step="0.01"\n                value="0">\n            <br>\n            Anchor Y <input id="anchorY" data-prop="anchor" data-key="y" type="range" max="2" min="-1" step="0.01"\n                value="0">\n            <br>\n            Position X <input id="positionX" data-prop="position" data-key="x" type="range" max="750" min="-750"\n                step="5" value="0">\n            <br>\n            Position Y <input id="positionY" data-prop="position" data-key="y" type="range" max="750" min="-750"\n                step="5" value="0">\n            <br>\n            Origin X <input id="originX" data-prop="origin" data-key="x" type="range" max="2" min="-1" step="0.01"\n                value="0">\n            <br>\n            Origin Y <input id="originY" data-prop="origin" data-key="y" type="range" max="2" min="-1" step="0.01"\n                value="0">\n            <br>\n        </div>\n        <div class="value"></div>\n        <div class="button-box">\n            <button onclick="setPos(\'center\')">\u5c45\u4e2d</button>\n            <button onclick="setPos(\'lefttop\')">\u5de6\u4e0a\u89d2</button>\n            <button onclick="setPos(\'righttop\')">\u53f3\u4e0a\u89d2</button>\n            <button onclick="setPos(\'leftbottom\')">\u5de6\u4e0b\u89d2</button>\n            <button onclick="setPos(\'rightbottom\')">\u53f3\u4e0b\u89d2</button>\n        </div>\n    </div>\n    <script>\n        const position = { x: 0, y: 0 }\n        const origin = { x: 0, y: 0 }\n        const anchor = { x: 0, y: 0 }\n        const prop = { origin, anchor, position }\n        const ranges = document.querySelector(\'.ranges\')\n        const valueDom = document.querySelector(\'.value\')\n\n        valueDom.innerHTML = getValue()\n        ranges.querySelectorAll(\'input\').forEach(input => {\n            input.addEventListener(\'input\', () => {\n                setTransform(input)\n                valueDom.innerHTML = getValue()\n            })\n        })\n\n        function getValue() {\n            return `\n                    Position: ${JSON.stringify(position)}<br/>\n                    \u767d\u8272 Anchor: ${JSON.stringify(anchor)}<br/>\n                    \u9752\u8272 Origin: ${JSON.stringify(origin)}\n                `\n        }\n        function setTransform(input) {\n\n            prop[input.dataset.prop][input.dataset.key] = parseFloat(input.value)\n            image2.transform.origin = origin\n            image2.transform.anchor = anchor\n            image2.transform.position = position\n\n            anchorPoint.transform.anchor = anchor\n            originPoint.transform.anchor = origin\n        }\n        function drawPoints() {\n            anchorPoint = new GameObject(\'anchorPoint\', {\n                size: {\n                    width: 10,\n                    height: 10,\n                },\n                origin: {\n                    x: 0.5,\n                    y: 0.5\n                }\n            })\n            const anchorGraph = anchorPoint.addComponent(new Graphics)\n\n            anchorGraph.graphics.beginFill(0xffffff, 1)\n            anchorGraph.graphics.drawRect(0, 0, 10, 10)\n            anchorGraph.graphics.endFill()\n            image.addChild(anchorPoint)\n\n\n\n\n            originPoint = new GameObject(\'originPoint\', {\n                size: {\n                    width: 5,\n                    height: 5,\n                },\n                origin: {\n                    x: 0.5,\n                    y: 0.5\n                }\n            })\n\n\n            const originGraph = originPoint.addComponent(new Graphics)\n\n            originGraph.graphics.beginFill(0x00ffff, 1)\n            originGraph.graphics.drawRect(0, 0, 5, 5)\n            originGraph.graphics.endFill()\n            image2.addChild(originPoint)\n\n\n            image.addComponent(new Render({\n                sortableChildren: true\n            }))\n            anchorPoint.addComponent(new Render({\n                zIndex: 0\n            }))\n            image2.addComponent(new Render({\n                zIndex: 1,\n                alpha: 0.8,\n            }))\n        }\n\n\n        const positions = {\n            center: {\n                position: { x: 0, y: 0 },\n                origin: { x: 0.5, y: 0.5 },\n                anchor: { x: 0.5, y: 0.5 },\n            },\n            lefttop: {\n                position: { x: 0, y: 0 },\n                origin: { x: 0, y: 0 },\n                anchor: { x: 0, y: 0 },\n            },\n            leftbottom: {\n                position: { x: 0, y: 0 },\n                origin: { x: 0, y: 1 },\n                anchor: { x: 0, y: 1 },\n            },\n            righttop: {\n                position: { x: 0, y: 0 },\n                origin: { x: 1, y: 0 },\n                anchor: { x: 1, y: 0 },\n            },\n            rightbottom: {\n                position: { x: 0, y: 0 },\n                origin: { x: 1, y: 1 },\n                anchor: { x: 1, y: 1 },\n            },\n        }\n        function setPos(key) {\n            const pos = positions[key]\n            Object.keys(pos).forEach((key) => {\n                document.querySelector(`#${key}X`).value = pos[key].x || 0\n                document.querySelector(`#${key}Y`).value = pos[key].y || 0\n            })\n\n            ranges.querySelectorAll(\'input\').forEach(input => {\n                setTransform(input)\n            })\n        }\n\n    <\/script>\n    <canvas width="750" height="1000" id="canvas" style="width: 100%"></canvas>\n</body>\n\n</html>'}}]);